{"version":3,"file":"packs/js/features/followers-7080ef8f1192b46dfc2a.chunk.js","mappings":"+JAAwKA,EAAOC,E,koBAA83BC,GAAS,QAAe,CAACC,QAAQ,CAAC,GAAK,mBAAmB,eAAiB,eAAk5BC,GAAgB,SAA73B,SAACC,EAAMC,GAAY,IAAAC,EAA0BD,EAAI,OAAOE,GAAXF,EAAI,YAAgBC,EAAOC,UAAU,IAASC,EAAGJ,EAAMK,IAAI,MAAYC,GAAmBN,EAAMO,MAAM,CAAC,YAAY,EAAE,cAAc,IAAIC,gBAAgBL,EAASK,cAAoBC,GAAS,QAAYT,EAAMK,IAAI,aAAiBK,GAAW,EAAE,GAAGJ,EAAmBI,EAAU,SAAU,CAAC,IAAMC,GAAQ,QAAsBX,EAAMG,GAAUO,EAAUC,EAAQA,EAAQJ,MAAM,CAAC,MAAM,OAAO,EAAG,IAAMK,GAAU,QAAoBZ,EAAMU,EAAU,aAAmBG,EAAUb,EAAMO,MAAM,CAAC,gBAAgBG,EAAU,eAAc,GAAmF,MAAM,CAACA,UAAS,EAACI,YAA3EV,IAAKM,GAAgBG,IAAYJ,EAASM,gBAA6CC,YAAYhB,EAAMO,MAAM,CAAC,WAAWG,IAAYO,WAAWjB,EAAMO,MAAM,CAAC,aAAa,YAAYG,EAAU,UAAUQ,UAAUlB,EAAMO,MAAM,CAAC,aAAa,YAAYG,EAAU,SAASE,UAAS,KAAiDO,CAAKxB,GAAO,SAAmBC,EAAO,YAAgD,gCAAuBwB,YAAS,K,OAAE,OAAgB,EAAK,iBAAiB,KAAU,WAAQ,EAAKC,MAAMX,YAAmC,IAAxB,EAAKW,MAAMX,WAAgB,EAAKW,MAAMC,UAAS,QAAgB,EAAKD,MAAMX,cAAe,IAAI,CAACa,SAAQ,K,EAAq3C,OAAlmD,OAAsP,YAAAC,kBAAA,WAAyB,MAA8BC,KAAKJ,MAA1BlB,EAAQ,kBAAEO,EAAS,YAAgBA,IAAwB,IAAbA,GAAgBe,KAAKJ,MAAMC,UAAS,QAAaZ,IAAYe,KAAKJ,MAAMC,UAAS,QAAeZ,KAAkBe,KAAKJ,MAAMC,UAAS,QAAuBnB,KAAa,YAAAuB,mBAAA,SAAmBC,GAAgB,MAAqBF,KAAKJ,MAAzBX,EAAS,YAACY,EAAQ,WAAgBZ,IAAwB,IAAbA,GAAgBA,IAAYiB,EAAUjB,WAAWA,IAAWY,GAAS,QAAaZ,IAAYY,GAAS,QAAeZ,MAAc,YAAAkB,OAAA,WAAc,MAAoEH,KAAKJ,MAAxEQ,EAAI,OAACZ,EAAU,aAACC,EAAO,UAACN,EAAS,YAACI,EAAS,YAACN,EAAS,YAACI,EAAW,cAAa,OAAIE,IAAwB,IAAbN,GAA8E,IAAbA,GAAiBO,EAAoDH,GAAgC,OAAK,MAAM,CAACgB,UAAU,+BAA0B,GAAoB,OAAK,IAAiB,CAACC,GAAG,mCAAmCC,eAAe,0BAA6C,OAAK,IAAO,CAACC,MAAMJ,EAAKK,cAAcrC,EAASC,SAASqC,YAAW,EAAMC,aAAY,QAAM,GAAoB,OAAK,IAAe,CAACC,UAAU,YAAYnB,QAAQA,EAAQN,UAAUA,EAAU0B,WAAWb,KAAKc,eAAeC,cAA0B,OAAK,IAAiB,CAACT,GAAG,0BAA0BC,eAAe,kCAAkCS,cAAc,aAAQ,EAAOxB,EAAWyB,KAAI,SAAAX,GAAiB,cAAK,IAAiB,CAACA,GAAGA,EAAGY,UAAS,GAAOZ,SAAxrB,OAAK,KAAQ,KAA3F,OAAK,IAAiB,KAAwvB,EAA3nD,CAAyB,OAAomD,OAAgBnC,EAAQ,YAAY,CAACiC,KAAK,sBAA4B3B,OAAO,sBAA4BoB,SAAS,oBAA0BL,WAAW,eAA8BC,QAAQ,SAAeN,UAAU,WAAiBI,UAAU,SAAeF,YAAY,WAAx5DnB,EAAy6DC,KAAWD,IAASA","sources":["webpack://soapbox-fe/./app/soapbox/features/followers/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _debounce from\"lodash/debounce\";var _dec,_class,_class2;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import MissingIndicator from'soapbox/components/missing_indicator';import{Spinner}from'soapbox/components/ui';import{findAccountByUsername}from'soapbox/selectors';import{getFollowDifference}from'soapbox/utils/accounts';import{getFeatures}from'soapbox/utils/features';import{fetchAccount,fetchFollowers,expandFollowers,fetchAccountByUsername}from'../../actions/accounts';import ScrollableList from'../../components/scrollable_list';import AccountContainer from'../../containers/account_container';import Column from'../ui/components/column';const messages=defineMessages({heading:{\"id\":\"column.followers\",\"defaultMessage\":\"Followers\"}});const mapStateToProps=(state,_ref)=>{let{params,withReplies=false}=_ref;const username=params.username||'';const me=state.get('me');const accountFetchError=(state.getIn(['accounts',-1,'username'])||'').toLowerCase()===username.toLowerCase();const features=getFeatures(state.get('instance'));let accountId=-1;if(accountFetchError){accountId=null;}else{const account=findAccountByUsername(state,username);accountId=account?account.getIn(['id'],null):-1;}const diffCount=getFollowDifference(state,accountId,'followers');const isBlocked=state.getIn(['relationships',accountId,'blocked_by'],false);const unavailable=me===accountId?false:isBlocked&&!features.blockersVisible;return{accountId,unavailable,isAccount:!!state.getIn(['accounts',accountId]),accountIds:state.getIn(['user_lists','followers',accountId,'items']),hasMore:!!state.getIn(['user_lists','followers',accountId,'next']),diffCount};};let Followers=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_class2=class Followers extends ImmutablePureComponent{constructor(){super(...arguments);_defineProperty(this,\"handleLoadMore\",_debounce(()=>{if(this.props.accountId&&this.props.accountId!==-1){this.props.dispatch(expandFollowers(this.props.accountId));}},300,{leading:true}));}componentDidMount(){const{params:{username},accountId}=this.props;if(accountId&&accountId!==-1){this.props.dispatch(fetchAccount(accountId));this.props.dispatch(fetchFollowers(accountId));}else{this.props.dispatch(fetchAccountByUsername(username));}}componentDidUpdate(prevProps){const{accountId,dispatch}=this.props;if(accountId&&accountId!==-1&&accountId!==prevProps.accountId&&accountId){dispatch(fetchAccount(accountId));dispatch(fetchFollowers(accountId));}}render(){const{intl,accountIds,hasMore,diffCount,isAccount,accountId,unavailable}=this.props;if(!isAccount&&accountId!==-1){return/*#__PURE__*/_jsx(MissingIndicator,{});}if(accountId===-1||!accountIds){return/*#__PURE__*/_jsx(Spinner,{});}if(unavailable){return/*#__PURE__*/_jsx(\"div\",{className:\"empty-column-indicator\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.account_unavailable\",defaultMessage:\"Profile unavailable\"}));}return/*#__PURE__*/_jsx(Column,{label:intl.formatMessage(messages.heading),withHeader:false,transparent:true},void 0,/*#__PURE__*/_jsx(ScrollableList,{scrollKey:\"followers\",hasMore:hasMore,diffCount:diffCount,onLoadMore:this.handleLoadMore,emptyMessage:/*#__PURE__*/_jsx(FormattedMessage,{id:\"account.followers.empty\",defaultMessage:\"No one follows this user yet.\"}),itemClassName:\"pb-4\"},void 0,accountIds.map(id=>/*#__PURE__*/_jsx(AccountContainer,{id:id,withNote:false},id))));}},_defineProperty(_class2,\"propTypes\",{intl:PropTypes.object.isRequired,params:PropTypes.object.isRequired,dispatch:PropTypes.func.isRequired,accountIds:ImmutablePropTypes.orderedSet,hasMore:PropTypes.bool,diffCount:PropTypes.number,isAccount:PropTypes.bool,unavailable:PropTypes.bool}),_class2))||_class)||_class);export{Followers as default};"],"names":["_class","_class2","messages","heading","Followers","state","_ref","params","username","me","get","accountFetchError","getIn","toLowerCase","features","accountId","account","diffCount","isBlocked","unavailable","blockersVisible","isAccount","accountIds","hasMore","_dec","arguments","props","dispatch","leading","componentDidMount","this","componentDidUpdate","prevProps","render","intl","className","id","defaultMessage","label","formatMessage","withHeader","transparent","scrollKey","onLoadMore","handleLoadMore","emptyMessage","itemClassName","map","withNote"],"sourceRoot":""}